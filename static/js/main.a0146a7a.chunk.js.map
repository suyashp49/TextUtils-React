{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","onClick","redMode","role","htmlFor","Red","yellowMode","Yellow","greenMode","Green","toggleMode","radioText","TextForm","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","newtxt","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setRadioText","setRed","setYellow","setGreen","setAlert","message","setTimeout","about","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a0146a7a.chunk.js","sourcesContent":["import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n    \r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a> \r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li> */}\r\n        {/* <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\">Disabled</a>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div class={`mx-2 form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n         <input class=\"form-check-input\" onClick={props.redMode} type=\"checkbox\" role=\"switch\" id=\"AAA\"/>\r\n         <label class=\"form-check-label\" htmlFor=\"AAA\">{props.Red}</label>\r\n      </div>\r\n      <div class={`mx-2 form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n         <input class=\"form-check-input\" onClick={props.yellowMode} type=\"checkbox\" role=\"switch\" id=\"BBB\"/>\r\n         <label class=\"form-check-label\" htmlFor=\"BBB\">{props.Yellow}</label>\r\n      </div>\r\n      <div class={`mx-2 form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n         <input class=\"form-check-input\" onClick={props.greenMode} type=\"checkbox\" role=\"switch\" id=\"CCC\"/>\r\n         <label class=\"form-check-label\" htmlFor=\"CCC\">{props.Green}</label>\r\n      </div>\r\n       <div class={`mx-2 form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n         <input class=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n         <label class=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.radioText}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  \r\n    const handleupClick = ()=>{\r\n        const newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text Converted into Uppercase\",\"success\");\r\n\r\n    }\r\n\r\n    const handleonChange = (event)=>{\r\n        setText(event.target.value);\r\n\r\n    }\r\n\r\n    const handleupClicklower = ()=>{\r\n        const newtxt = text.toLowerCase();\r\n        setText(newtxt);\r\n        props.showAlert(\"Text Converted into Lowercase\",\"success\");\r\n\r\n    }\r\n\r\n    const clearText = ()=>{\r\n        const newwtxt = \" \";\r\n        setText(newwtxt);\r\n        props.showAlert(\"Text is Cleared\",\"success\");\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        const text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied to Clipboard\",\"success\");\r\n\r\n    }\r\n\r\n    const handleExtraSpaces = ()=>{\r\n        const newText  = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces Removed\",\"success\");\r\n       \r\n    }\r\n\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    return (\r\n     <>\r\n        <div className=\"container my-3\" style={{color: props.mode ==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n           <div className=\"mb-3\">\r\n           <textarea className=\"form-control\" id=\"myBox\" style={{backgroundColor: props.mode==='light'?'#3b5274':'white', color: props.mode ==='dark'?'black':'white'}} value={text} onChange={handleonChange} rows=\"8\"></textarea>\r\n           </div>\r\n           <button className=\"btn btn-primary mx-2\" onClick={handleupClick}>Click for toUpperCase</button>\r\n           <button className=\"btn btn-primary mx-2\" onClick={handleupClicklower}>Click For LowerCase</button>\r\n           <button className=\"btn btn-primary mx-2\" onClick={clearText}>Click for ClearText</button>\r\n           <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Click for Text Copy</button>\r\n           <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Click for Remove Spaces</button>\r\n\r\n        </div>\r\n        <div className=\"container my-20\" style={{color: props.mode ==='dark'?'white':'black'}}>\r\n            <h1>In this Text</h1>\r\n            <p>{text.split(\" \").length-1} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} minutes in reading</p>\r\n            <h2>Prview</h2>\r\n            <p>{text.length>0?text:\"Enter Something to Preview here\"}</p>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n","import React,{useState} from 'react';\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n          const lower = word.toLowerCase();\r\n          return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        \r\n          props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}:- {props.alert.msg}</strong>\r\n            </div>\r\n    \r\n    )\r\n}\r\n\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n// import About from './Components/About';\nimport React,{useState} from 'react';\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from 'react-router-dom';\n\n\n\nfunction App() {\n\n   \n  const [mode, setMode] = useState('light');\n  const [radioText,setRadioText] = useState('Enable DarkMode');\n  const [Red,setRed] = useState('Enable Red Mode');\n  const [Yellow,setYellow] = useState('Enable Yellow Mode');\n  const [Green,setGreen] = useState('Enable Green Mode');\n\n  const [alert,setAlert] = useState(null);\n\n\n  const showAlert = (message,type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n\n      setTimeout(()=>{\n        setAlert(null);\n      },1500);\n  }\n  \n  const toggleMode = ()=>{\n    if(mode ==='light')\n    {\n      setMode('dark');\n      setRadioText('Disable DarkMode');\n      document.body.style.backgroundColor = '#3b5274';\n      showAlert(\"Dark mode Enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      setRadioText('Enable DarkMode');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Dark mode Diabled\",\"success\");\n\n    }\n  }\n  \n  const redMode = ()=>{\n    if(mode ==='light')\n    {\n      setMode('dark');\n      setRed('Disable Red Mode');\n      document.body.style.backgroundColor = 'red';\n      showAlert(\"Red mode Enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      setRed('Enable Red Mode');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Red mode Diabled\",\"success\");\n\n    }\n\n  }\n\n  const yellowMode = ()=>{\n    if(mode ==='light')\n    {\n      setMode('dark');\n      setYellow('Disable Yellow Mode');\n      document.body.style.backgroundColor = 'yellow';\n      showAlert(\"Yellow mode Enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      setYellow('Enable Yellow Mode');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Yellow mode Diabled\",\"success\");\n\n    }\n\n  }\n\n  const greenMode = ()=>{\n    if(mode ==='light')\n    {\n      setMode('dark');\n      setGreen('Disable Green Mode');\n      document.body.style.backgroundColor = 'green';\n      showAlert(\"Green mode Enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      setGreen('Enable Green Mode');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Green mode Diabled\",\"success\");\n\n    }\n\n  }\n\n\n  return (\n    <>\n    {/* <Router> */}\n       <Navbar title=\"TextUtils\" about=\"about by js\" mode={mode} toggleMode={toggleMode} redMode={redMode} yellowMode={yellowMode} greenMode={greenMode} Red={Red} Yellow={Yellow} Green={Green} radioText={radioText} />\n       <Alert alert={alert}/>\n       {/* <Switch>\n          <Route path=\"/about\">\n              <div className=\"container my-3\">\n               <About/>\n             </div>        \n          </Route>\n          <Route path=\"/\"> */}\n             <TextForm heading=\"Enter text here\" mode={mode} showAlert={showAlert}/>  \n          {/* </Route>\n        </Switch>\n    </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}